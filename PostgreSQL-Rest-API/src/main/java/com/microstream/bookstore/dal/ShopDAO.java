
package com.microstream.bookstore.dal;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;
import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;

import com.microstream.bookstore.domain.Shop;
import com.rapidclipse.framework.server.jpa.dal.JpaDataAccessObject;


/**
 * Home object for domain model class Shop.
 *
 * @see Shop
 */
public class ShopDAO extends JpaDataAccessObject.Default<Shop, Long> implements AutoCloseable
{
	private static ShopDAO INSTANCE = new ShopDAO();
	private EntityManager entityManager;
	
	public ShopDAO()
	{
		super(Shop.class);
		this.entityManager = PostgreDAO.getInstance().getFactory().createEntityManager();
	}
	
	public static ShopDAO getInstance()
	{
		if(INSTANCE == null)
		{
			INSTANCE = new ShopDAO();
		}
		return INSTANCE;
	}

	/**
	 * @queryMethod Do not edit, method is generated by editor!
	 */
	public List<Shop> getAllShops()
	{
		final CriteriaQuery<Shop> criteriaQuery = this.getAllShopsQuery();

		// final EntityManager entityManager = this.em();
		
		final TypedQuery<Shop> query = this.entityManager.createQuery(criteriaQuery);
		return query.getResultList();
	}

	/**
	 * @queryMethod Do not edit, method is generated by editor!
	 */
	public CriteriaQuery<Shop> getAllShopsQuery()
	{
		// final EntityManager entityManager = this.em();
		//
		final CriteriaBuilder criteriaBuilder = this.entityManager.getCriteriaBuilder();
		
		final CriteriaQuery<Shop> criteriaQuery = criteriaBuilder.createQuery(Shop.class);
		
		criteriaQuery.from(Shop.class);
		
		return criteriaQuery;
	}

	@Override
	public void close() throws Exception
	{
		this.entityManager.close();
	}

}
