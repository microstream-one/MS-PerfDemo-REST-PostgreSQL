##########################################################
## Application NOT USED! -> persistence.xml!
##########################################################

# data directory for application, ~ prefix means user home
bookstoredemo.dataDir = C:/java/RapidClipse103/PostgreSQL-Rest-API

# amount of randomly generated data, supported values: minimal, small, medium, large, humongous
bookstoredemo.initialDataAmount = medium

# strategy to migrate the MicroStream data to the JPA database, batch_insert or sql_file
bookstoredemo.jpaDataMigrationStrategy = batch_insert


##########################################################
## Tomcat
##########################################################

#server.port = 8080


##########################################################
## JPA
##########################################################

spring.datasource.driverClassName = org.postgresql.Driver
spring.jpa.database-platform = org.hibernate.dialect.PostgreSQLDialect

spring.datasource.url = jdbc:postgresql://localhost:5432/postgres
spring.datasource.username = postgres
spring.datasource.password = geheim

spring.jpa.open-in-view = false

spring.jpa.properties.hibernate.generate_statistics = true
spring.jpa.properties.hibernate.cache.use_second_level_cache = true
spring.jpa.properties.hibernate.cache.use_query_cache = true
spring.jpa.properties.hibernate.cache.region.factory_class = org.hibernate.cache.ehcache.EhCacheRegionFactory
spring.jpa.properties.hibernate.cache.ehcache.missing_cache_strategy = create
spring.jpa.properties.hibernate.current_session_context_class = org.hibernate.context.internal.ThreadLocalSessionContext
spring.jpa.properties.javax.persistence.sharedCache.mode = ALL
spring.jpa.hibernate.ddl-auto = update
#spring.jpa.properties.hibernate.format_sql = true
#logging.level.org.hibernate.SQL = DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder = TRACE

##########################################################
## Connection pool
##########################################################

spring.datasource.hikari.connectionTimeout = 20000
spring.datasource.hikari.maximumPoolSize = 5